# Navigation
function go_to_project() {
    projects_list=("$@")

    # Using `ls` prevents misbehaving with paths containing spaces
    if [ "$TMUX" = "" ]; then
        project=$(ls -d $projects_list | fzf --height ~40% --layout reverse --with-nth=-1 --delimiter=/)
    else
        project=$(ls -d $projects_list | fzf --tmux center --with-nth=-1 --delimiter=/)
    fi

    if [ -n "$project" ]; then
        tmux_go_to_session $project
    fi
}

function tmux_go_to_session() {
    project_path=$1
    session_name=$(echo $project_path | awk -F "/" '{print $NF}')
    window_name=nvim

    tmux has-session -t $session_name  > /dev/null 2>&1
    if [ $? != 0 ]; then
        if [ -d "$project_path/master" ]; then
	    project_path="$project_path/master" 
	    window_name=master
	fi
        tmux new-session -s $session_name -c $project_path -d
        tmux rename-window -t "$session_name:1" $window_name
	tmux send-keys -t "$session_name:1" C-z 'nvim' Enter
    fi
    tmux switch-client -t $session_name
}

# Git
function git_worktree_add() {
    branch_name=$1
    if [ $# -eq 0 ]; then
        echo "Provide a branch name"
        return
    fi

    if [ "${PWD##*/}" != "master" ]; then
        echo "You need to be in the master folder to use this command"
        return
    fi

    git pull
    git worktree add -b $branch_name ../$branch_name
    tmux new window ../$1
    window_id=$(tmux new-window -c ../$branch_name -n $branch_name -P)
    tmux send-keys -t $window_id C-z 'nvim' Enter
}
