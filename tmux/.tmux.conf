#unbind-key -a
# use UTF8
#set -g utf8
#set-window-option -g utf8 on
 
# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Bind <C-S><Arrows> to pane resize by 15
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Down resize-pane -D 5

#bind-key -n C-S-Left if-shell "$is_vim" "send-keys C-A-a" "resize-pane -L 15"
bind-key -n C-S-Left resize-pane -L 15
bind-key -n C-S-Right resize-pane -R 15

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 0

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# "Yank" shortcut
bind-key y copy-mode

# More Vim-like "tabs" navigation keys
bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window
bind-key -n C-n next-window
bind-key -n C-p previous-window
bind-key o new-window

# Config auto reload
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Add support for mouse
setw -g mouse on

bind-key l split-window -h -c '#{pane_current_path}'
bind-key h split-window -h -c '#{pane_current_path}'
bind-key j split-window -c '#{pane_current_path}'
bind-key k split-window -c '#{pane_current_path}'

######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-style fg=colour0
set -g pane-active-border-style fg=brightred

## Status bar design
# status line
set -g status-justify left
set -g status-interval 2

# messaging
set -g message-style fg=colour0,bg=yellow
set -g message-command-style fg=blue,bg=colour0

#window mode
setw -g mode-style bg=colour6,fg=colour0

# window status
setw -g window-status-current-style fg=colour0,bg=colour119,bold
setw -g window-status-current-format '  #I#[fg=colour8]:#[fg=colour0]#W#[fg=colour8]#F  '
setw -g window-status-style fg=colour250,bg=colour0,none
setw -g window-status-last-style fg=colour250,bg=colour0,none

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# }
# The panes {

set -g pane-border-style fg=colour8,bg=colour0
set -g pane-active-border-style fg=colour10,bg=colour0

# }
# The statusbar {

# Move the status bar to top
set -g status-position top
set -g status-style fg=colour254,bg=colour0,dim
set -g status-interval 2
set -g status-right '#(powerline tmux right)'
set -g status-right-length 90
set -g status-left ""
set -g status-left-length 0

setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# }
# The messages {

set -g message-style fg=colour16,bg=colour3,bold

# }

source-file ~/.tmux.powerline.conf

# Load macOS specific config
if-shell "uname | grep -q Darwin" "source-file .tmux.macos.conf" ""
